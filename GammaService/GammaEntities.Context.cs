//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GammaService
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class GammaEntities : DbContext
    {
        public GammaEntities()
            : base("name=GammaEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<ActiveProductionTasks> ActiveProductionTasks { get; set; }
        public virtual DbSet<Reports> Reports { get; set; }
        public virtual DbSet<Templates> Templates { get; set; }
        public virtual DbSet<ModbusDevices> ModbusDevices { get; set; }
        public virtual DbSet<PlaceRemotePrintingSettings> PlaceRemotePrintingSettings { get; set; }
        public virtual DbSet<RemotePrinters> RemotePrinters { get; set; }
        public virtual DbSet<CurrentPlaceUsers> CurrentPlaceUsers { get; set; }
        public virtual DbSet<DocProduction> DocProduction { get; set; }
        public virtual DbSet<DocProductionProducts> DocProductionProducts { get; set; }
        public virtual DbSet<Docs> Docs { get; set; }
        public virtual DbSet<DocWithdrawal> DocWithdrawal { get; set; }
        public virtual DbSet<DocWithdrawalProducts> DocWithdrawalProducts { get; set; }
        public virtual DbSet<ProductPalletItems> ProductPalletItems { get; set; }
        public virtual DbSet<ProductPallets> ProductPallets { get; set; }
        public virtual DbSet<Products> Products { get; set; }
        public virtual DbSet<ProductionTasks> ProductionTasks { get; set; }
        public virtual DbSet<C1CCharacteristics> C1CCharacteristics { get; set; }
        public virtual DbSet<C1CMeasureUnits> C1CMeasureUnits { get; set; }
    
        public virtual ObjectResult<Nullable<System.Guid>> GetActiveSourceSpools(Nullable<int> placeID)
        {
            var placeIDParameter = placeID.HasValue ?
                new ObjectParameter("PlaceID", placeID) :
                new ObjectParameter("PlaceID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<System.Guid>>("GetActiveSourceSpools", placeIDParameter);
        }
    }
}
